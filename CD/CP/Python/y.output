Terminals unused in grammar

   STRUCT
   EXTDEFS
   PARAS
   STMTS
   DEFS
   DECS
   ARGS
   INIT_ARGS


State 191 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | extdefs

    3 extdefs: extdef
    4        | extdefs extdef

    5 extdef: def
    6       | INT func compound_stmt
    7       | FLOAT func compound_stmt
    8       | CHAR func compound_stmt

    9 func: IDENTIFIER '(' paras ')'
   10     | IDENTIFIER '(' ')'

   11 paras: para
   12      | paras ',' para

   13 para: INT var

   14 var: IDENTIFIER
   15    | var '[' CONSTANT ']'

   16 stmts: stmt
   17      | stmts stmt

   18 stmt: compound_stmt
   19     | expr_stmt
   20     | selection_stmt
   21     | iteration_stmt
   22     | jump_stmt

   23 compound_stmt: '{' defs stmts '}'
   24              | '{' defs '}'
   25              | '{' stmts '}'
   26              | '{' '}'
   27              | ';'

   28 expr_stmt: expr ';'

   29 selection_stmt: IF '(' expr ')' stmt
   30               | IF '(' expr ')' stmt ELSE stmt

   31 iteration_stmt: FOR '(' expr ';' expr ';' expr ')' stmt
   32               | FOR '(' expr ';' expr ';' ')' stmt
   33               | FOR '(' expr ';' ';' expr ')' stmt
   34               | FOR '(' expr ';' ';' ')' stmt
   35               | FOR '(' ';' expr ';' expr ')' stmt
   36               | FOR '(' ';' expr ';' ')' stmt
   37               | FOR '(' ';' ';' expr ')' stmt
   38               | FOR '(' ';' ';' ')' stmt

   39 jump_stmt: RETURN expr ';'
   40          | CONTINUE ';'
   41          | BREAK ';'

   42 defs: def
   43     | defs def

   44 def: INT decs ';'

   45 decs: dec
   46     | decs ',' dec

   47 dec: var
   48    | var '=' init

   49 init: expr
   50     | '{' init_args '}'

   51 expr: assignment
   52     | READ '(' expr ')'

   53 assignment: logical_or
   54           | unary '=' assignment
   55           | unary ADD_ASSIGN assignment
   56           | unary SUB_ASSIGN assignment
   57           | unary MUL_ASSIGN assignment
   58           | unary DIV_ASSIGN assignment
   59           | unary MOD_ASSIGN assignment
   60           | unary AND_ASSIGN assignment
   61           | unary XOR_ASSIGN assignment
   62           | unary OR_ASSIGN assignment
   63           | unary SHL_ASSIGN assignment
   64           | unary SHR_ASSIGN assignment

   65 logical_or: logical_and
   66           | logical_or OR_OP logical_and

   67 logical_and: bit_or
   68            | logical_and AND_OP bit_or

   69 bit_or: bit_xor
   70       | bit_or '|' bit_xor

   71 bit_xor: bit_and
   72        | bit_xor '^' bit_and

   73 bit_and: equality
   74        | bit_and '&' equality

   75 equality: relational
   76         | equality EQ_OP relational
   77         | equality NE_OP relational

   78 relational: shift
   79           | relational '>' shift
   80           | relational GE_OP shift
   81           | relational '<' shift
   82           | relational LE_OP shift

   83 shift: additive
   84      | shift SHL_OP additive
   85      | shift SHR_OP additive

   86 additive: multi
   87         | additive '+' multi
   88         | additive '-' multi

   89 multi: unary
   90      | multi '*' unary
   91      | multi '/' unary
   92      | multi '%' unary

   93 unary: postfix
   94      | INC_OP unary
   95      | DEC_OP unary
   96      | '-' unary
   97      | '!' unary
   98      | '~' unary

   99 postfix: primary
  100        | postfix INC_OP
  101        | postfix DEC_OP
  102        | postfix '[' expr ']'
  103        | postfix '(' args ')'
  104        | postfix '(' ')'
  105        | postfix '.' IDENTIFIER

  106 primary: IDENTIFIER
  107        | CONSTANT
  108        | '(' expr ')'

  109 args: expr
  110     | args ',' expr

  111 init_args: init_arg
  112          | init_args ',' init_arg

  113 init_arg: expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 97
'%' (37) 92
'&' (38) 74
'(' (40) 9 10 29 30 31 32 33 34 35 36 37 38 52 103 104 108
')' (41) 9 10 29 30 31 32 33 34 35 36 37 38 52 103 104 108
'*' (42) 90
'+' (43) 87
',' (44) 12 46 110 112
'-' (45) 88 96
'.' (46) 105
'/' (47) 91
';' (59) 27 28 31 32 33 34 35 36 37 38 39 40 41 44
'<' (60) 81
'=' (61) 48 54
'>' (62) 79
'[' (91) 15 102
']' (93) 15 102
'^' (94) 72
'{' (123) 23 24 25 26 50
'|' (124) 70
'}' (125) 23 24 25 26 50
'~' (126) 98
error (256)
INC_OP (258) 94 100
DEC_OP (259) 95 101
SHL_OP (260) 84
SHR_OP (261) 85
LE_OP (262) 82
GE_OP (263) 80
EQ_OP (264) 76
NE_OP (265) 77
AND_OP (266) 68
OR_OP (267) 66
ADD_ASSIGN (268) 55
SUB_ASSIGN (269) 56
MUL_ASSIGN (270) 57
DIV_ASSIGN (271) 58
MOD_ASSIGN (272) 59
AND_ASSIGN (273) 60
XOR_ASSIGN (274) 61
OR_ASSIGN (275) 62
SHL_ASSIGN (276) 63
SHR_ASSIGN (277) 64
IDENTIFIER (278) 9 10 14 105 106
CONSTANT (279) 15 107
INT (280) 6 13 44
STRUCT (281)
FLOAT (282) 7
CHAR (283) 8
IF (284) 29 30
ELSE (285) 30
FOR (286) 31 32 33 34 35 36 37 38
CONTINUE (287) 40
BREAK (288) 41
RETURN (289) 39
READ (290) 52
EXTDEFS (291)
PARAS (292)
STMTS (293)
DEFS (294)
DECS (295)
ARGS (296)
INIT_ARGS (297)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1 2, on right: 0
extdefs (67)
    on left: 3 4, on right: 2 4
extdef (68)
    on left: 5 6 7 8, on right: 3 4
func (69)
    on left: 9 10, on right: 6 7 8
paras (70)
    on left: 11 12, on right: 9 12
para (71)
    on left: 13, on right: 11 12
var (72)
    on left: 14 15, on right: 13 15 47 48
stmts (73)
    on left: 16 17, on right: 17 23 25
stmt (74)
    on left: 18 19 20 21 22, on right: 16 17 29 30 31 32 33 34 35 36
    37 38
compound_stmt (75)
    on left: 23 24 25 26 27, on right: 6 7 8 18
expr_stmt (76)
    on left: 28, on right: 19
selection_stmt (77)
    on left: 29 30, on right: 20
iteration_stmt (78)
    on left: 31 32 33 34 35 36 37 38, on right: 21
jump_stmt (79)
    on left: 39 40 41, on right: 22
defs (80)
    on left: 42 43, on right: 23 24 43
def (81)
    on left: 44, on right: 5 42 43
decs (82)
    on left: 45 46, on right: 44 46
dec (83)
    on left: 47 48, on right: 45 46
init (84)
    on left: 49 50, on right: 48
expr (85)
    on left: 51 52, on right: 28 29 30 31 32 33 34 35 36 37 39 49 52
    102 108 109 110 113
assignment (86)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64, on right: 51 54 55
    56 57 58 59 60 61 62 63 64
logical_or (87)
    on left: 65 66, on right: 53 66
logical_and (88)
    on left: 67 68, on right: 65 66 68
bit_or (89)
    on left: 69 70, on right: 67 68 70
bit_xor (90)
    on left: 71 72, on right: 69 70 72
bit_and (91)
    on left: 73 74, on right: 71 72 74
equality (92)
    on left: 75 76 77, on right: 73 74 76 77
relational (93)
    on left: 78 79 80 81 82, on right: 75 76 77 79 80 81 82
shift (94)
    on left: 83 84 85, on right: 78 79 80 81 82 84 85
additive (95)
    on left: 86 87 88, on right: 83 84 85 87 88
multi (96)
    on left: 89 90 91 92, on right: 86 87 88 90 91 92
unary (97)
    on left: 93 94 95 96 97 98, on right: 54 55 56 57 58 59 60 61 62
    63 64 89 90 91 92 94 95 96 97 98
postfix (98)
    on left: 99 100 101 102 103 104 105, on right: 93 100 101 102 103
    104 105
primary (99)
    on left: 106 107 108, on right: 99
args (100)
    on left: 109 110, on right: 103 110
init_args (101)
    on left: 111 112, on right: 50 112
init_arg (102)
    on left: 113, on right: 111 112


State 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    $default  reduce using rule 1 (program)

    program  go to state 4
    extdefs  go to state 5
    extdef   go to state 6
    def      go to state 7


State 1

    6 extdef: INT . func compound_stmt
   44 def: INT . decs ';'

    IDENTIFIER  shift, and go to state 8

    func  go to state 9
    var   go to state 10
    decs  go to state 11
    dec   go to state 12


State 2

    7 extdef: FLOAT . func compound_stmt

    IDENTIFIER  shift, and go to state 13

    func  go to state 14


State 3

    8 extdef: CHAR . func compound_stmt

    IDENTIFIER  shift, and go to state 13

    func  go to state 15


State 4

    0 $accept: program . $end

    $end  shift, and go to state 16


State 5

    2 program: extdefs .
    4 extdefs: extdefs . extdef

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    $default  reduce using rule 2 (program)

    extdef  go to state 17
    def     go to state 7


State 6

    3 extdefs: extdef .

    $default  reduce using rule 3 (extdefs)


State 7

    5 extdef: def .

    $default  reduce using rule 5 (extdef)


State 8

    9 func: IDENTIFIER . '(' paras ')'
   10     | IDENTIFIER . '(' ')'
   14 var: IDENTIFIER .

    '('  shift, and go to state 18

    $default  reduce using rule 14 (var)


State 9

    6 extdef: INT func . compound_stmt

    '{'  shift, and go to state 19
    ';'  shift, and go to state 20

    compound_stmt  go to state 21


State 10

   15 var: var . '[' CONSTANT ']'
   47 dec: var .
   48    | var . '=' init

    '['  shift, and go to state 22
    '='  shift, and go to state 23

    $default  reduce using rule 47 (dec)


State 11

   44 def: INT decs . ';'
   46 decs: decs . ',' dec

    ','  shift, and go to state 24
    ';'  shift, and go to state 25


State 12

   45 decs: dec .

    $default  reduce using rule 45 (decs)


State 13

    9 func: IDENTIFIER . '(' paras ')'
   10     | IDENTIFIER . '(' ')'

    '('  shift, and go to state 18


State 14

    7 extdef: FLOAT func . compound_stmt

    '{'  shift, and go to state 19
    ';'  shift, and go to state 20

    compound_stmt  go to state 26


State 15

    8 extdef: CHAR func . compound_stmt

    '{'  shift, and go to state 19
    ';'  shift, and go to state 20

    compound_stmt  go to state 27


State 16

    0 $accept: program $end .

    $default  accept


State 17

    4 extdefs: extdefs extdef .

    $default  reduce using rule 4 (extdefs)


State 18

    9 func: IDENTIFIER '(' . paras ')'
   10     | IDENTIFIER '(' . ')'

    INT  shift, and go to state 28
    ')'  shift, and go to state 29

    paras  go to state 30
    para   go to state 31


State 19

   23 compound_stmt: '{' . defs stmts '}'
   24              | '{' . defs '}'
   25              | '{' . stmts '}'
   26              | '{' . '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    INT         shift, and go to state 36
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    '}'         shift, and go to state 44
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmts           go to state 48
    stmt            go to state 49
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    defs            go to state 55
    def             go to state 56
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 20

   27 compound_stmt: ';' .

    $default  reduce using rule 27 (compound_stmt)


State 21

    6 extdef: INT func compound_stmt .

    $default  reduce using rule 6 (extdef)


State 22

   15 var: var '[' . CONSTANT ']'

    CONSTANT  shift, and go to state 72


State 23

   48 dec: var '=' . init

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 73
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    init         go to state 74
    expr         go to state 75
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 24

   46 decs: decs ',' . dec

    IDENTIFIER  shift, and go to state 76

    var  go to state 10
    dec  go to state 77


State 25

   44 def: INT decs ';' .

    $default  reduce using rule 44 (def)


State 26

    7 extdef: FLOAT func compound_stmt .

    $default  reduce using rule 7 (extdef)


State 27

    8 extdef: CHAR func compound_stmt .

    $default  reduce using rule 8 (extdef)


State 28

   13 para: INT . var

    IDENTIFIER  shift, and go to state 76

    var  go to state 78


State 29

   10 func: IDENTIFIER '(' ')' .

    $default  reduce using rule 10 (func)


State 30

    9 func: IDENTIFIER '(' paras . ')'
   12 paras: paras . ',' para

    ')'  shift, and go to state 79
    ','  shift, and go to state 80


State 31

   11 paras: para .

    $default  reduce using rule 11 (paras)


State 32

   94 unary: INC_OP . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 81
    postfix  go to state 70
    primary  go to state 71


State 33

   95 unary: DEC_OP . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 82
    postfix  go to state 70
    primary  go to state 71


State 34

  106 primary: IDENTIFIER .

    $default  reduce using rule 106 (primary)


State 35

  107 primary: CONSTANT .

    $default  reduce using rule 107 (primary)


State 36

   44 def: INT . decs ';'

    IDENTIFIER  shift, and go to state 76

    var   go to state 10
    decs  go to state 11
    dec   go to state 12


State 37

   29 selection_stmt: IF . '(' expr ')' stmt
   30               | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 83


State 38

   31 iteration_stmt: FOR . '(' expr ';' expr ';' expr ')' stmt
   32               | FOR . '(' expr ';' expr ';' ')' stmt
   33               | FOR . '(' expr ';' ';' expr ')' stmt
   34               | FOR . '(' expr ';' ';' ')' stmt
   35               | FOR . '(' ';' expr ';' expr ')' stmt
   36               | FOR . '(' ';' expr ';' ')' stmt
   37               | FOR . '(' ';' ';' expr ')' stmt
   38               | FOR . '(' ';' ';' ')' stmt

    '('  shift, and go to state 84


State 39

   40 jump_stmt: CONTINUE . ';'

    ';'  shift, and go to state 85


State 40

   41 jump_stmt: BREAK . ';'

    ';'  shift, and go to state 86


State 41

   39 jump_stmt: RETURN . expr ';'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 87
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 42

   52 expr: READ . '(' expr ')'

    '('  shift, and go to state 88


State 43

  108 primary: '(' . expr ')'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 89
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 44

   26 compound_stmt: '{' '}' .

    $default  reduce using rule 26 (compound_stmt)


State 45

   96 unary: '-' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 90
    postfix  go to state 70
    primary  go to state 71


State 46

   97 unary: '!' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 91
    postfix  go to state 70
    primary  go to state 71


State 47

   98 unary: '~' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 92
    postfix  go to state 70
    primary  go to state 71


State 48

   17 stmts: stmts . stmt
   25 compound_stmt: '{' stmts . '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    '}'         shift, and go to state 93
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 94
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 49

   16 stmts: stmt .

    $default  reduce using rule 16 (stmts)


State 50

   18 stmt: compound_stmt .

    $default  reduce using rule 18 (stmt)


State 51

   19 stmt: expr_stmt .

    $default  reduce using rule 19 (stmt)


State 52

   20 stmt: selection_stmt .

    $default  reduce using rule 20 (stmt)


State 53

   21 stmt: iteration_stmt .

    $default  reduce using rule 21 (stmt)


State 54

   22 stmt: jump_stmt .

    $default  reduce using rule 22 (stmt)


State 55

   23 compound_stmt: '{' defs . stmts '}'
   24              | '{' defs . '}'
   43 defs: defs . def

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    INT         shift, and go to state 36
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    '}'         shift, and go to state 95
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmts           go to state 96
    stmt            go to state 49
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    def             go to state 97
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 56

   42 defs: def .

    $default  reduce using rule 42 (defs)


State 57

   28 expr_stmt: expr . ';'

    ';'  shift, and go to state 98


State 58

   51 expr: assignment .

    $default  reduce using rule 51 (expr)


State 59

   53 assignment: logical_or .
   66 logical_or: logical_or . OR_OP logical_and

    OR_OP  shift, and go to state 99

    $default  reduce using rule 53 (assignment)


State 60

   65 logical_or: logical_and .
   68 logical_and: logical_and . AND_OP bit_or

    AND_OP  shift, and go to state 100

    $default  reduce using rule 65 (logical_or)


State 61

   67 logical_and: bit_or .
   70 bit_or: bit_or . '|' bit_xor

    '|'  shift, and go to state 101

    $default  reduce using rule 67 (logical_and)


State 62

   69 bit_or: bit_xor .
   72 bit_xor: bit_xor . '^' bit_and

    '^'  shift, and go to state 102

    $default  reduce using rule 69 (bit_or)


State 63

   71 bit_xor: bit_and .
   74 bit_and: bit_and . '&' equality

    '&'  shift, and go to state 103

    $default  reduce using rule 71 (bit_xor)


State 64

   73 bit_and: equality .
   76 equality: equality . EQ_OP relational
   77         | equality . NE_OP relational

    EQ_OP  shift, and go to state 104
    NE_OP  shift, and go to state 105

    $default  reduce using rule 73 (bit_and)


State 65

   75 equality: relational .
   79 relational: relational . '>' shift
   80           | relational . GE_OP shift
   81           | relational . '<' shift
   82           | relational . LE_OP shift

    LE_OP  shift, and go to state 106
    GE_OP  shift, and go to state 107
    '>'    shift, and go to state 108
    '<'    shift, and go to state 109

    $default  reduce using rule 75 (equality)


State 66

   78 relational: shift .
   84 shift: shift . SHL_OP additive
   85      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 110
    SHR_OP  shift, and go to state 111

    $default  reduce using rule 78 (relational)


State 67

   83 shift: additive .
   87 additive: additive . '+' multi
   88         | additive . '-' multi

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113

    $default  reduce using rule 83 (shift)


State 68

   86 additive: multi .
   90 multi: multi . '*' unary
   91      | multi . '/' unary
   92      | multi . '%' unary

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116

    $default  reduce using rule 86 (additive)


State 69

   54 assignment: unary . '=' assignment
   55           | unary . ADD_ASSIGN assignment
   56           | unary . SUB_ASSIGN assignment
   57           | unary . MUL_ASSIGN assignment
   58           | unary . DIV_ASSIGN assignment
   59           | unary . MOD_ASSIGN assignment
   60           | unary . AND_ASSIGN assignment
   61           | unary . XOR_ASSIGN assignment
   62           | unary . OR_ASSIGN assignment
   63           | unary . SHL_ASSIGN assignment
   64           | unary . SHR_ASSIGN assignment
   89 multi: unary .

    ADD_ASSIGN  shift, and go to state 117
    SUB_ASSIGN  shift, and go to state 118
    MUL_ASSIGN  shift, and go to state 119
    DIV_ASSIGN  shift, and go to state 120
    MOD_ASSIGN  shift, and go to state 121
    AND_ASSIGN  shift, and go to state 122
    XOR_ASSIGN  shift, and go to state 123
    OR_ASSIGN   shift, and go to state 124
    SHL_ASSIGN  shift, and go to state 125
    SHR_ASSIGN  shift, and go to state 126
    '='         shift, and go to state 127

    $default  reduce using rule 89 (multi)


State 70

   93 unary: postfix .
  100 postfix: postfix . INC_OP
  101        | postfix . DEC_OP
  102        | postfix . '[' expr ']'
  103        | postfix . '(' args ')'
  104        | postfix . '(' ')'
  105        | postfix . '.' IDENTIFIER

    INC_OP  shift, and go to state 128
    DEC_OP  shift, and go to state 129
    '('     shift, and go to state 130
    '['     shift, and go to state 131
    '.'     shift, and go to state 132

    $default  reduce using rule 93 (unary)


State 71

   99 postfix: primary .

    $default  reduce using rule 99 (postfix)


State 72

   15 var: var '[' CONSTANT . ']'

    ']'  shift, and go to state 133


State 73

   50 init: '{' . init_args '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 134
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71
    init_args    go to state 135
    init_arg     go to state 136


State 74

   48 dec: var '=' init .

    $default  reduce using rule 48 (dec)


State 75

   49 init: expr .

    $default  reduce using rule 49 (init)


State 76

   14 var: IDENTIFIER .

    $default  reduce using rule 14 (var)


State 77

   46 decs: decs ',' dec .

    $default  reduce using rule 46 (decs)


State 78

   13 para: INT var .
   15 var: var . '[' CONSTANT ']'

    '['  shift, and go to state 22

    $default  reduce using rule 13 (para)


State 79

    9 func: IDENTIFIER '(' paras ')' .

    $default  reduce using rule 9 (func)


State 80

   12 paras: paras ',' . para

    INT  shift, and go to state 28

    para  go to state 137


State 81

   94 unary: INC_OP unary .

    $default  reduce using rule 94 (unary)


State 82

   95 unary: DEC_OP unary .

    $default  reduce using rule 95 (unary)


State 83

   29 selection_stmt: IF '(' . expr ')' stmt
   30               | IF '(' . expr ')' stmt ELSE stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 138
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 84

   31 iteration_stmt: FOR '(' . expr ';' expr ';' expr ')' stmt
   32               | FOR '(' . expr ';' expr ';' ')' stmt
   33               | FOR '(' . expr ';' ';' expr ')' stmt
   34               | FOR '(' . expr ';' ';' ')' stmt
   35               | FOR '(' . ';' expr ';' expr ')' stmt
   36               | FOR '(' . ';' expr ';' ')' stmt
   37               | FOR '(' . ';' ';' expr ')' stmt
   38               | FOR '(' . ';' ';' ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ';'         shift, and go to state 139
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 140
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 85

   40 jump_stmt: CONTINUE ';' .

    $default  reduce using rule 40 (jump_stmt)


State 86

   41 jump_stmt: BREAK ';' .

    $default  reduce using rule 41 (jump_stmt)


State 87

   39 jump_stmt: RETURN expr . ';'

    ';'  shift, and go to state 141


State 88

   52 expr: READ '(' . expr ')'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 142
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 89

  108 primary: '(' expr . ')'

    ')'  shift, and go to state 143


State 90

   96 unary: '-' unary .

    $default  reduce using rule 96 (unary)


State 91

   97 unary: '!' unary .

    $default  reduce using rule 97 (unary)


State 92

   98 unary: '~' unary .

    $default  reduce using rule 98 (unary)


State 93

   25 compound_stmt: '{' stmts '}' .

    $default  reduce using rule 25 (compound_stmt)


State 94

   17 stmts: stmts stmt .

    $default  reduce using rule 17 (stmts)


State 95

   24 compound_stmt: '{' defs '}' .

    $default  reduce using rule 24 (compound_stmt)


State 96

   17 stmts: stmts . stmt
   23 compound_stmt: '{' defs stmts . '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    '}'         shift, and go to state 144
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 94
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 97

   43 defs: defs def .

    $default  reduce using rule 43 (defs)


State 98

   28 expr_stmt: expr ';' .

    $default  reduce using rule 28 (expr_stmt)


State 99

   66 logical_or: logical_or OR_OP . logical_and

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    logical_and  go to state 145
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 146
    postfix      go to state 70
    primary      go to state 71


State 100

   68 logical_and: logical_and AND_OP . bit_or

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    bit_or      go to state 147
    bit_xor     go to state 62
    bit_and     go to state 63
    equality    go to state 64
    relational  go to state 65
    shift       go to state 66
    additive    go to state 67
    multi       go to state 68
    unary       go to state 146
    postfix     go to state 70
    primary     go to state 71


State 101

   70 bit_or: bit_or '|' . bit_xor

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    bit_xor     go to state 148
    bit_and     go to state 63
    equality    go to state 64
    relational  go to state 65
    shift       go to state 66
    additive    go to state 67
    multi       go to state 68
    unary       go to state 146
    postfix     go to state 70
    primary     go to state 71


State 102

   72 bit_xor: bit_xor '^' . bit_and

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    bit_and     go to state 149
    equality    go to state 64
    relational  go to state 65
    shift       go to state 66
    additive    go to state 67
    multi       go to state 68
    unary       go to state 146
    postfix     go to state 70
    primary     go to state 71


State 103

   74 bit_and: bit_and '&' . equality

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    equality    go to state 150
    relational  go to state 65
    shift       go to state 66
    additive    go to state 67
    multi       go to state 68
    unary       go to state 146
    postfix     go to state 70
    primary     go to state 71


State 104

   76 equality: equality EQ_OP . relational

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    relational  go to state 151
    shift       go to state 66
    additive    go to state 67
    multi       go to state 68
    unary       go to state 146
    postfix     go to state 70
    primary     go to state 71


State 105

   77 equality: equality NE_OP . relational

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    relational  go to state 152
    shift       go to state 66
    additive    go to state 67
    multi       go to state 68
    unary       go to state 146
    postfix     go to state 70
    primary     go to state 71


State 106

   82 relational: relational LE_OP . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    shift     go to state 153
    additive  go to state 67
    multi     go to state 68
    unary     go to state 146
    postfix   go to state 70
    primary   go to state 71


State 107

   80 relational: relational GE_OP . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    shift     go to state 154
    additive  go to state 67
    multi     go to state 68
    unary     go to state 146
    postfix   go to state 70
    primary   go to state 71


State 108

   79 relational: relational '>' . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    shift     go to state 155
    additive  go to state 67
    multi     go to state 68
    unary     go to state 146
    postfix   go to state 70
    primary   go to state 71


State 109

   81 relational: relational '<' . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    shift     go to state 156
    additive  go to state 67
    multi     go to state 68
    unary     go to state 146
    postfix   go to state 70
    primary   go to state 71


State 110

   84 shift: shift SHL_OP . additive

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    additive  go to state 157
    multi     go to state 68
    unary     go to state 146
    postfix   go to state 70
    primary   go to state 71


State 111

   85 shift: shift SHR_OP . additive

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    additive  go to state 158
    multi     go to state 68
    unary     go to state 146
    postfix   go to state 70
    primary   go to state 71


State 112

   87 additive: additive '+' . multi

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    multi    go to state 159
    unary    go to state 146
    postfix  go to state 70
    primary  go to state 71


State 113

   88 additive: additive '-' . multi

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    multi    go to state 160
    unary    go to state 146
    postfix  go to state 70
    primary  go to state 71


State 114

   90 multi: multi '*' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 161
    postfix  go to state 70
    primary  go to state 71


State 115

   91 multi: multi '/' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 162
    postfix  go to state 70
    primary  go to state 71


State 116

   92 multi: multi '%' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    unary    go to state 163
    postfix  go to state 70
    primary  go to state 71


State 117

   55 assignment: unary ADD_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 164
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 118

   56 assignment: unary SUB_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 165
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 119

   57 assignment: unary MUL_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 166
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 120

   58 assignment: unary DIV_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 167
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 121

   59 assignment: unary MOD_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 168
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 122

   60 assignment: unary AND_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 169
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 123

   61 assignment: unary XOR_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 170
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 124

   62 assignment: unary OR_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 171
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 125

   63 assignment: unary SHL_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 172
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 126

   64 assignment: unary SHR_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 173
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 127

   54 assignment: unary '=' . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    assignment   go to state 174
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 128

  100 postfix: postfix INC_OP .

    $default  reduce using rule 100 (postfix)


State 129

  101 postfix: postfix DEC_OP .

    $default  reduce using rule 101 (postfix)


State 130

  103 postfix: postfix '(' . args ')'
  104        | postfix '(' . ')'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ')'         shift, and go to state 175
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 176
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71
    args         go to state 177


State 131

  102 postfix: postfix '[' . expr ']'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 178
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 132

  105 postfix: postfix '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 179


State 133

   15 var: var '[' CONSTANT ']' .

    $default  reduce using rule 15 (var)


State 134

  113 init_arg: expr .

    $default  reduce using rule 113 (init_arg)


State 135

   50 init: '{' init_args . '}'
  112 init_args: init_args . ',' init_arg

    ','  shift, and go to state 180
    '}'  shift, and go to state 181


State 136

  111 init_args: init_arg .

    $default  reduce using rule 111 (init_args)


State 137

   12 paras: paras ',' para .

    $default  reduce using rule 12 (paras)


State 138

   29 selection_stmt: IF '(' expr . ')' stmt
   30               | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 182


State 139

   35 iteration_stmt: FOR '(' ';' . expr ';' expr ')' stmt
   36               | FOR '(' ';' . expr ';' ')' stmt
   37               | FOR '(' ';' . ';' expr ')' stmt
   38               | FOR '(' ';' . ';' ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ';'         shift, and go to state 183
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 184
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 140

   31 iteration_stmt: FOR '(' expr . ';' expr ';' expr ')' stmt
   32               | FOR '(' expr . ';' expr ';' ')' stmt
   33               | FOR '(' expr . ';' ';' expr ')' stmt
   34               | FOR '(' expr . ';' ';' ')' stmt

    ';'  shift, and go to state 185


State 141

   39 jump_stmt: RETURN expr ';' .

    $default  reduce using rule 39 (jump_stmt)


State 142

   52 expr: READ '(' expr . ')'

    ')'  shift, and go to state 186


State 143

  108 primary: '(' expr ')' .

    $default  reduce using rule 108 (primary)


State 144

   23 compound_stmt: '{' defs stmts '}' .

    $default  reduce using rule 23 (compound_stmt)


State 145

   66 logical_or: logical_or OR_OP logical_and .
   68 logical_and: logical_and . AND_OP bit_or

    AND_OP  shift, and go to state 100

    $default  reduce using rule 66 (logical_or)


State 146

   89 multi: unary .

    $default  reduce using rule 89 (multi)


State 147

   68 logical_and: logical_and AND_OP bit_or .
   70 bit_or: bit_or . '|' bit_xor

    '|'  shift, and go to state 101

    $default  reduce using rule 68 (logical_and)


State 148

   70 bit_or: bit_or '|' bit_xor .
   72 bit_xor: bit_xor . '^' bit_and

    '^'  shift, and go to state 102

    $default  reduce using rule 70 (bit_or)


State 149

   72 bit_xor: bit_xor '^' bit_and .
   74 bit_and: bit_and . '&' equality

    '&'  shift, and go to state 103

    $default  reduce using rule 72 (bit_xor)


State 150

   74 bit_and: bit_and '&' equality .
   76 equality: equality . EQ_OP relational
   77         | equality . NE_OP relational

    EQ_OP  shift, and go to state 104
    NE_OP  shift, and go to state 105

    $default  reduce using rule 74 (bit_and)


State 151

   76 equality: equality EQ_OP relational .
   79 relational: relational . '>' shift
   80           | relational . GE_OP shift
   81           | relational . '<' shift
   82           | relational . LE_OP shift

    LE_OP  shift, and go to state 106
    GE_OP  shift, and go to state 107
    '>'    shift, and go to state 108
    '<'    shift, and go to state 109

    $default  reduce using rule 76 (equality)


State 152

   77 equality: equality NE_OP relational .
   79 relational: relational . '>' shift
   80           | relational . GE_OP shift
   81           | relational . '<' shift
   82           | relational . LE_OP shift

    LE_OP  shift, and go to state 106
    GE_OP  shift, and go to state 107
    '>'    shift, and go to state 108
    '<'    shift, and go to state 109

    $default  reduce using rule 77 (equality)


State 153

   82 relational: relational LE_OP shift .
   84 shift: shift . SHL_OP additive
   85      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 110
    SHR_OP  shift, and go to state 111

    $default  reduce using rule 82 (relational)


State 154

   80 relational: relational GE_OP shift .
   84 shift: shift . SHL_OP additive
   85      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 110
    SHR_OP  shift, and go to state 111

    $default  reduce using rule 80 (relational)


State 155

   79 relational: relational '>' shift .
   84 shift: shift . SHL_OP additive
   85      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 110
    SHR_OP  shift, and go to state 111

    $default  reduce using rule 79 (relational)


State 156

   81 relational: relational '<' shift .
   84 shift: shift . SHL_OP additive
   85      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 110
    SHR_OP  shift, and go to state 111

    $default  reduce using rule 81 (relational)


State 157

   84 shift: shift SHL_OP additive .
   87 additive: additive . '+' multi
   88         | additive . '-' multi

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113

    $default  reduce using rule 84 (shift)


State 158

   85 shift: shift SHR_OP additive .
   87 additive: additive . '+' multi
   88         | additive . '-' multi

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113

    $default  reduce using rule 85 (shift)


State 159

   87 additive: additive '+' multi .
   90 multi: multi . '*' unary
   91      | multi . '/' unary
   92      | multi . '%' unary

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116

    $default  reduce using rule 87 (additive)


State 160

   88 additive: additive '-' multi .
   90 multi: multi . '*' unary
   91      | multi . '/' unary
   92      | multi . '%' unary

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116

    $default  reduce using rule 88 (additive)


State 161

   90 multi: multi '*' unary .

    $default  reduce using rule 90 (multi)


State 162

   91 multi: multi '/' unary .

    $default  reduce using rule 91 (multi)


State 163

   92 multi: multi '%' unary .

    $default  reduce using rule 92 (multi)


State 164

   55 assignment: unary ADD_ASSIGN assignment .

    $default  reduce using rule 55 (assignment)


State 165

   56 assignment: unary SUB_ASSIGN assignment .

    $default  reduce using rule 56 (assignment)


State 166

   57 assignment: unary MUL_ASSIGN assignment .

    $default  reduce using rule 57 (assignment)


State 167

   58 assignment: unary DIV_ASSIGN assignment .

    $default  reduce using rule 58 (assignment)


State 168

   59 assignment: unary MOD_ASSIGN assignment .

    $default  reduce using rule 59 (assignment)


State 169

   60 assignment: unary AND_ASSIGN assignment .

    $default  reduce using rule 60 (assignment)


State 170

   61 assignment: unary XOR_ASSIGN assignment .

    $default  reduce using rule 61 (assignment)


State 171

   62 assignment: unary OR_ASSIGN assignment .

    $default  reduce using rule 62 (assignment)


State 172

   63 assignment: unary SHL_ASSIGN assignment .

    $default  reduce using rule 63 (assignment)


State 173

   64 assignment: unary SHR_ASSIGN assignment .

    $default  reduce using rule 64 (assignment)


State 174

   54 assignment: unary '=' assignment .

    $default  reduce using rule 54 (assignment)


State 175

  104 postfix: postfix '(' ')' .

    $default  reduce using rule 104 (postfix)


State 176

  109 args: expr .

    $default  reduce using rule 109 (args)


State 177

  103 postfix: postfix '(' args . ')'
  110 args: args . ',' expr

    ')'  shift, and go to state 187
    ','  shift, and go to state 188


State 178

  102 postfix: postfix '[' expr . ']'

    ']'  shift, and go to state 189


State 179

  105 postfix: postfix '.' IDENTIFIER .

    $default  reduce using rule 105 (postfix)


State 180

  112 init_args: init_args ',' . init_arg

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 134
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71
    init_arg     go to state 190


State 181

   50 init: '{' init_args '}' .

    $default  reduce using rule 50 (init)


State 182

   29 selection_stmt: IF '(' expr ')' . stmt
   30               | IF '(' expr ')' . stmt ELSE stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 191
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 183

   37 iteration_stmt: FOR '(' ';' ';' . expr ')' stmt
   38               | FOR '(' ';' ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ')'         shift, and go to state 192
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 193
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 184

   35 iteration_stmt: FOR '(' ';' expr . ';' expr ')' stmt
   36               | FOR '(' ';' expr . ';' ')' stmt

    ';'  shift, and go to state 194


State 185

   31 iteration_stmt: FOR '(' expr ';' . expr ';' expr ')' stmt
   32               | FOR '(' expr ';' . expr ';' ')' stmt
   33               | FOR '(' expr ';' . ';' expr ')' stmt
   34               | FOR '(' expr ';' . ';' ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ';'         shift, and go to state 195
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 196
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 186

   52 expr: READ '(' expr ')' .

    $default  reduce using rule 52 (expr)


State 187

  103 postfix: postfix '(' args ')' .

    $default  reduce using rule 103 (postfix)


State 188

  110 args: args ',' . expr

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 197
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 189

  102 postfix: postfix '[' expr ']' .

    $default  reduce using rule 102 (postfix)


State 190

  112 init_args: init_args ',' init_arg .

    $default  reduce using rule 112 (init_args)


State 191

   29 selection_stmt: IF '(' expr ')' stmt .
   30               | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 198

    ELSE      [reduce using rule 29 (selection_stmt)]
    $default  reduce using rule 29 (selection_stmt)


State 192

   38 iteration_stmt: FOR '(' ';' ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 199
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 193

   37 iteration_stmt: FOR '(' ';' ';' expr . ')' stmt

    ')'  shift, and go to state 200


State 194

   35 iteration_stmt: FOR '(' ';' expr ';' . expr ')' stmt
   36               | FOR '(' ';' expr ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ')'         shift, and go to state 201
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 202
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 195

   33 iteration_stmt: FOR '(' expr ';' ';' . expr ')' stmt
   34               | FOR '(' expr ';' ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ')'         shift, and go to state 203
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 204
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 196

   31 iteration_stmt: FOR '(' expr ';' expr . ';' expr ')' stmt
   32               | FOR '(' expr ';' expr . ';' ')' stmt

    ';'  shift, and go to state 205


State 197

  110 args: args ',' expr .

    $default  reduce using rule 110 (args)


State 198

   30 selection_stmt: IF '(' expr ')' stmt ELSE . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 206
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 199

   38 iteration_stmt: FOR '(' ';' ';' ')' stmt .

    $default  reduce using rule 38 (iteration_stmt)


State 200

   37 iteration_stmt: FOR '(' ';' ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 207
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 201

   36 iteration_stmt: FOR '(' ';' expr ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 208
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 202

   35 iteration_stmt: FOR '(' ';' expr ';' expr . ')' stmt

    ')'  shift, and go to state 209


State 203

   34 iteration_stmt: FOR '(' expr ';' ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 210
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 204

   33 iteration_stmt: FOR '(' expr ';' ';' expr . ')' stmt

    ')'  shift, and go to state 211


State 205

   31 iteration_stmt: FOR '(' expr ';' expr ';' . expr ')' stmt
   32               | FOR '(' expr ';' expr ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    ')'         shift, and go to state 212
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    expr         go to state 213
    assignment   go to state 58
    logical_or   go to state 59
    logical_and  go to state 60
    bit_or       go to state 61
    bit_xor      go to state 62
    bit_and      go to state 63
    equality     go to state 64
    relational   go to state 65
    shift        go to state 66
    additive     go to state 67
    multi        go to state 68
    unary        go to state 69
    postfix      go to state 70
    primary      go to state 71


State 206

   30 selection_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 30 (selection_stmt)


State 207

   37 iteration_stmt: FOR '(' ';' ';' expr ')' stmt .

    $default  reduce using rule 37 (iteration_stmt)


State 208

   36 iteration_stmt: FOR '(' ';' expr ';' ')' stmt .

    $default  reduce using rule 36 (iteration_stmt)


State 209

   35 iteration_stmt: FOR '(' ';' expr ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 214
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 210

   34 iteration_stmt: FOR '(' expr ';' ';' ')' stmt .

    $default  reduce using rule 34 (iteration_stmt)


State 211

   33 iteration_stmt: FOR '(' expr ';' ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 215
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 212

   32 iteration_stmt: FOR '(' expr ';' expr ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 216
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 213

   31 iteration_stmt: FOR '(' expr ';' expr ';' expr . ')' stmt

    ')'  shift, and go to state 217


State 214

   35 iteration_stmt: FOR '(' ';' expr ';' expr ')' stmt .

    $default  reduce using rule 35 (iteration_stmt)


State 215

   33 iteration_stmt: FOR '(' expr ';' ';' expr ')' stmt .

    $default  reduce using rule 33 (iteration_stmt)


State 216

   32 iteration_stmt: FOR '(' expr ';' expr ';' ')' stmt .

    $default  reduce using rule 32 (iteration_stmt)


State 217

   31 iteration_stmt: FOR '(' expr ';' expr ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 45
    '!'         shift, and go to state 46
    '~'         shift, and go to state 47

    stmt            go to state 218
    compound_stmt   go to state 50
    expr_stmt       go to state 51
    selection_stmt  go to state 52
    iteration_stmt  go to state 53
    jump_stmt       go to state 54
    expr            go to state 57
    assignment      go to state 58
    logical_or      go to state 59
    logical_and     go to state 60
    bit_or          go to state 61
    bit_xor         go to state 62
    bit_and         go to state 63
    equality        go to state 64
    relational      go to state 65
    shift           go to state 66
    additive        go to state 67
    multi           go to state 68
    unary           go to state 69
    postfix         go to state 70
    primary         go to state 71


State 218

   31 iteration_stmt: FOR '(' expr ';' expr ';' expr ')' stmt .

    $default  reduce using rule 31 (iteration_stmt)
